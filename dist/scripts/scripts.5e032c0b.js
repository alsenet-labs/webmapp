"use strict";angular.module("webmappApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui-leaflet"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/Battelle",{templateUrl:"views/battelle.html",controller:"BattelleCtrl",controllerAs:"battelle"}).otherwise({redirectTo:"/Battelle"})}]),proj4.defs("EPSG:2056","+title=LV95 +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs"),proj4.defs("LV95","+title=LV95 +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs"),proj4.defs("MN95","+title=MN95 +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs"),angular.module("webmappApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("webmappApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("webmappApp").controller("BattelleCtrl",["$scope","$http","$location","$timeout","notify","leafletData","leafletDrawEvents","$q","beacons",function($scope,$http,$location,$timeout,notify,leafletData,leafletDrawEvents,$q,beacons){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"],$timeout(function(){$scope.map=leafletData.getMap("lf-battelle"),$scope.map.then(function(map){window.map=map,map.scope=$scope,$scope.map=map,$scope.map.on("overlayremove",function(e){var layerName=$scope.getLayerByName(e.name)._name;$(".label-"+layerName).hide(0)}),$scope.map.on("overlayadd",function(e){var layerName=e.name;$(".label-"+layerName).show(0)})})},1e3);var cH=$("#crosshair-h"),cV=$("#crosshair-v");$(document).on("mousemove",function(e){$scope.hairVisible&&!$scope.hairFrozen&&(cH.css("top",e.pageY),cV.css("left",e.pageX))}),$(document).on("keydown",function(e){switch(console.log(e.keyCode),e.keyCode){case 88:$scope.toggleHairFrozen()}}),$scope.drawnItems=new L.FeatureGroup,angular.extend($scope,{center:{lng:8,lat:47,zoom:8},bounds:null,layers:{},loadLayers:function(url){var scope=this,q=$q.defer();return scope.json?q.resolve():(url=url||"layers/battelle/layers.json",$http.get(url).then(function(res){200!=res.status?(notify.message('Could not load layers from "'+url+'".'),q.reject()):$scope.initLayers(res).then(q.resolve)})),q.promise},defaults:{},getLayerBounds:function(layer){if("imageOverlay"==layer.type)return layer.bounds;if(layer.projection&&layer.bounds){var tl=proj4(layer.projection,"WGS84",layer.bounds[0]),br=proj4(layer.projection,"WGS84",layer.bounds[1]);return L.bounds([[tl[1],tl[0]],[br[1],br[0]]])}return layer.bounds&&layer.bounds[0]?layer.bounds[0].lat?L.bounds([[layer.bounds[0].lat,layer.bounds[0].lng],[layer.bounds[1].lat,layer.bounds[1].lng]]):L.bounds([[layer.bounds[0][0],layer.bounds[0][1]],[layer.bounds[1][0],layer.bounds[1][1]]]):void 0},getLayerCenter:function(layer){if(layer.projection&&layer.center){var coords=proj4(layer.projection,"WGS84",layer.center);return L.latLng(coords[1],coords[0])}return L.latLng(0,0)},initLayers:function(res){function doneOne(){--todo,todo||q.resolve()}var center,pathname=res.config.url.replace(/layers\.json.*/,""),layers=$scope.__layers={},todo=0;angular.forEach(res.data,function(layer,layerName){++todo});var q=$q.defer();return angular.forEach(res.data,function(layer,layerName){var layerClass;if(layer.baseLayer){if(layerClass="baselayers",!center&&layer.visible){var coords=[0,0];try{coords=proj4(layer.projection,"WGS84",layer.center)}catch(e){console.log(e)}center={lng:coords[0],lat:coords[1],zoom:layer.options.initialZoom||(void 0!==layer.options.minZoom?Math.floor(layer.options.minZoom+(layer.options.maxZoom-layer.options.minZoom)/3):8)}}}else layerClass="overlays";var list=layers[layerClass];if(list||(list=layers[layerClass]={}),"geoJSONShape"==layer.type){var layerURL="/"==layer.url.substr(0,1)||"http"==layer.url.substr(0,4)?layer.url:pathname+layer.url;$http.get(layerURL).then(function(res){var q=$q.defer();layer["class"]&&$scope[layer["class"]]&&$scope[layer["class"]].onload?(layer.name=layerName,layer.scope=$scope,angular.extend(layer.options,{onEachFeature:$scope.geojson.onEachFeature,layerName:layerName}),$scope[layer["class"]].onload(layer,res,function(err,res){err?q.reject(err):q.resolve(res)})):q.resolve(res),q.promise.then(function(res){list[layerName]={_name:layerName,name:layer.description,type:layer.type,data:res.data,visible:layer.visible||!1,__center:$scope.getLayerCenter(layer),bounds:$scope.getLayerBounds(layer),CRS:layer.CRS,layerParams:layer.params||{},layerOptions:layer.options||{}},doneOne()},function(err){doneOne()})},function(err){doneOne()})}else list[layerName]={_name:layerName,name:layer.description,url:"/"==layer.url.substr(0,1)||"http"==layer.url.substr(0,4)?layer.url:pathname+layer.url,type:layer.type,CRS:layer.CRS,visible:layer.visible||!1,__center:$scope.getLayerCenter(layer),bounds:$scope.getLayerBounds(layer),layerParams:layer.params||{},layerOptions:layer.options||{}},doneOne()}),q.promise.then(function(){angular.extend($scope,{center:center||$scope.center,layers:layers||$scope.layers})}),q.promise},controls:{scale:{imperial:!1},minimap:{type:"minimap",layer:{name:"OpenStreetMap",url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"xyz"},toggleDisplay:!0},custom:[$scope.saveButton=L.easyButton({states:[{title:"Save shapes",icon:"fa-save fa-lg",onClick:function(btn,map){$scope.downloadlink||($scope.downloadLink=document.createElement("a"),$scope.downloadLink.download="battelle-geojson.json");var link=$scope.downloadLink,geojson={type:"FeatureCollection",features:$scope.features};link.href="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(geojson,null,4)),document.body.appendChild(link),link.click(),document.body.removeChild(link),link.remove()}}]}),$scope.originButton=L.easyButton({states:[{title:"Set beacons coordinates origin",icon:"fa-circle-o -fa-lg",onClick:function(btn,map){return $scope.hairFrozen?(beacons.geolocation.origin=angular.copy($scope.frozenCoords.LV95),beacons.updateAxis(),void $scope.toggleHairFrozen()):void alert("Unexpected error")}}]}),$scope.axisButton=L.easyButton({states:[{title:"Set vertical axis from origin",icon:"fa-dot-circle-o -fa-lg",onClick:function(btn,map){return $scope.hairFrozen?(beacons.geolocation.downVector=angular.copy($scope.frozenCoords.LV95),beacons.updateAxis(),void $scope.toggleHairFrozen()):void alert("Unexpected error")}}]}),L.easyButton({states:[{title:"Toggle crosshair",icon:"fa-crosshairs fa-lg",onClick:function(btn,map){$scope.toggleCrosshair()}}]})]},toggleCrosshair:function(){var hair=$(".hair");$scope.hairFrozen=!1,$scope.coordsToDisplay="mouseCoords",hair.is(":visible")?(hair.hide(0),$("#mousecoords").hide(),$scope.hairVisible=!1,"function"==typeof $scope.crosshairOffMousedown&&$scope.crosshairOffMousedown(),$("search").show(0),$("#lf-battelle").css("cursor",""),$scope.originButton.disable(),$scope.axisButton.disable()):(hair.show(0),$("#mousecoords").show(),$scope.hairVisible=!0,$scope.disableHairdown=!1,$scope.crosshairOffMousedown=$scope.$on("leafletDirectiveMap.lf-battelle.mousedown",function(event,args){$scope.leafletEvent=args.leafletEvent,$scope.disableHairdown||$($scope.leafletEvent.originalEvent.target).closest(".leaflet-control").length||$scope.toggleHairFrozen()}),$("search").hide(0),$("#lf-battelle").css("cursor","none"))},drawOptions:{enabled:!1,draw:{polyline:{metric:!1},polygon:{metric:!1,showArea:!0,drawError:{color:"#b00b00",timeout:1e3},shapeOptions:{color:"blue"}},circle:{showArea:!0,metric:!1,shapeOptions:{color:"#662d91"}},marker:!1},edit:{featureGroup:$scope.drawnItems,remove:!0}},drawEventHandlers:{created:function(e,leafletEvent,leafletObject,model,modelName){$scope.drawnItems.addLayer(leafletEvent.layer),$scope.updateObjectList()},edited:function(arg){$scope.updateObjectList()},deleted:function(e,leafletEvent){$scope.drawnItems.removeLayer(leafletEvent.layers),$scope.updateObjectList()},drawstart:function(arg){$scope.disableHairdown=!0},drawstop:function(arg){$scope.disableHairdown=!1},editstart:function(arg){$scope.disableHairdown=!0},editstop:function(arg){$scope.disableHairdown=!1},deletestart:function(arg){$scope.disableHairdown=!0},deletestop:function(arg){$scope.disableHairdown=!1}},updateObjectList:function(){var features=$scope.features=[];console.log($scope.drawnItems._layers),angular.forEach($scope.drawnItems._layers,function(layer){features.push(layer.toGeoJSON())}),$scope.saveButton[features.length?"enable":"disable"]()},events:{map:{enable:["mousemove","mousedown","move","moveend","baselayerchange","overlayadd","overlayremove","zoomstart","zoomend"],logic:"emit"}},mouseCoords:{LV95:[0,0],WGS84:[0,0]},centerCoords:{LV95:[0,0],WGS84:[0,0]},coordsToDisplay:"mouseCoords",coordsProjection:"LV95",getCoordsToDisplay:function(){var scope=this,coords=scope.coordsToDisplay&&scope[scope.coordsToDisplay]&&scope[scope.coordsToDisplay][scope.coordsProjection];return coords?coords[0].toFixed(8)+", "+coords[1].toFixed(8):"not available"},getCenter:function(){var scope=this;if(scope.map){var coords=scope.map.getCenter();scope.centerCoords.WGS84=[coords.lng,coords.lat],scope.centerCoords.LV95=proj4("WGS84","EPSG:2056",[coords.lng,coords.lat])}return scope.centerCoords},getMouseCoords:function(leafletMouseEvent){var scope=this,coords=(leafletMouseEvent||scope.leafletEvent).latlng;return scope.mouseCoords.WGS84=[coords.lng,coords.lat],scope.mouseCoords.LV95=proj4("WGS84","EPSG:2056",[coords.lng,coords.lat]),scope.mouseCoords},setupEventHandlers:function(){var scope=this;scope.$on("leafletDirectiveMap.lf-battelle.mousemove",function(event,args){scope.leafletEvent=args.leafletEvent,scope.getMouseCoords()}),scope.$on("leafletDirectiveMap.lf-battelle.move",function(event,args){scope.getCenter(),scope.hairFrozen&&$scope.toggleHairFrozen()});var drawEvents=leafletDrawEvents.getAvailableEvents();angular.forEach(scope.drawEventHandlers,function(handler,eventName){eventName="draw:"+eventName;var idx=drawEvents.indexOf(eventName);0>idx?console.log("Error: unknown drawEvent "+eventName):drawEvents.splice(idx,1),scope.$on("leafletDirectiveDraw.lf-battelle."+eventName,function(e,payload){var p=payload;handler(e,p.leafletEvent,p.leafletObject,p.model,p.modelName)})}),drawEvents.length&&console.log("warning: no handlers for the following drawEvents:",drawEvents),scope.$on("centerUrlHash",function(event,centerHash){scope.centerHash=centerHash})},toggleHairFrozen:function(){$scope.hairFrozen=!$scope.hairFrozen,$scope.hairFrozen?($("#lf-battelle").css("cursor",""),$scope.frozenCoords=angular.copy($scope[$scope.coordsToDisplay]),$scope._coordsToDisplay=$scope.coordsToDisplay,$scope.coordsToDisplay="frozenCoords",$scope.originButton.enable(),$scope.axisButton.enable()):($("#lf-battelle").css("cursor","none"),$scope.coordsToDisplay=$scope._coordsToDisplay,$scope.originButton.disable(),$scope.axisButton.disable())},labels:{},labels_visible:!0,geojson:{style:{fillColor:"green",weight:2,opacity:1,color:"white",dashArray:"3",fillOpacity:.7},onEachFeature:function(feature,layer){var shortname=feature.properties.description;if(!layer.label){var id=feature.properties.layerName+"."+shortname;$scope.labels&&$scope.labels[id]?layer.label=$scope.labels[id]:($scope.labels[id]=layer.label=new L.Label({className:"label-"+feature.properties.layerName},layer),layer.label.setContent(shortname),$scope.labels_visible&&$timeout(function(){layer&&layer._showLabel(feature.properties)},1))}}},updateSearchString:function(options){var val=options.val;val!=$scope.searchString&&($scope.searchString=val,$scope.$emit("updateSearchString"))},getGeoJSONLayer:function(layerName){var fg_layer;return $scope.map&&$scope.map.eachLayer(function(lf_layer){return!fg_layer&&lf_layer._layers&&lf_layer.options&&lf_layer.options.layerName==layerName?(fg_layer=lf_layer,!1):void 0}),fg_layer},updateGeoJSON:function(layer){var rows=layer.data.rows||{};layer.rows=$scope.filterRows(rows,$scope.searchString),layer.geojson=beacons.toGeoJSON(layer);var fg_layer=$scope.getGeoJSONLayer(layer.name);if(fg_layer){var features={},featureNames=[];layer.geojson.features.forEach(function(feature){var name=feature.properties.description;featureNames.push(name),features[name]=feature}),fg_layer.eachLayer(function(l){var hasMoved,latlng1,name=l.feature.properties.description,fi=featureNames.indexOf(name);if(fi>=0){var latlng0=l.feature.properties.latlng;latlng1=features[name].properties.latlng,hasMoved=latlng0.lat!=latlng1.lat||latlng0.lng!=latlng1.lng||latlng0[0]!=latlng1[0]||latlng0[1]!=latlng1[1]}if(0>fi||hasMoved){fg_layer.removeLayer(l);var labelId=l.feature.properties.layerName+"."+name;$scope.labels[labelId]&&(0>fi?($scope.map.removeLayer($scope.labels[labelId]),delete $scope.labels[labelId]):$scope.labels[labelId].setLatLng&&$scope.labels[labelId].setLatLng({lat:latlng1.lat||latlng1[0]||0,lng:latlng1.lng||latlng1[1]||0}))}else featureNames.splice(fi,1)}),featureNames.length&&layer.geojson.features.forEach(function(feature){featureNames.indexOf(feature.properties.description)>=0&&fg_layer.addData(feature)})}},filterRows:function(rows,searchString){var result=[],str=(searchString||"").toLowerCase().split(" ");return rows.forEach(function(row,row_index){var mismatch=0;str.forEach(function(s){s.length&&(++mismatch,row.shortname.toLowerCase().match(s)&&--mismatch)}),0==mismatch&&result.push(row)}),result},updateControls:function(){$timeout(function(){var setDrawButtonsVisibility=$scope.drawOptions.enabled?"show":"hide";$(".leaflet-control.leaflet-draw")[setDrawButtonsVisibility](0),$(".fa-save").closest(".leaflet-control")[setDrawButtonsVisibility](0);var setAxisButtonsVisibility=$scope.axisButtonsVisible?"show":"hide";$(".fa-circle-o, .fa-dot-circle-o").closest(".leaflet-control")[setAxisButtonsVisibility](0)})},getLayerByName:function(layerName){var layers=$scope.layers.baselayers;for(var name in layers)if(layers[name]&&layers[name].name==layerName)return layers[name];layers=$scope.layers.overlays;for(var name in layers)if(layers[name]&&layers[name].name==layerName)return layers[name]},getCurrentLayer:function(){if($scope.currentLayer)return $scope.currentLayer;var baselayers=$scope.layers.baselayers||$scope.__layers.baselayers;for(var layerName in baselayers)if(baselayers[layerName].visible)return baselayers[layerName];alert("There is no visible base layer !")},baselayerChange:function(e,data){var currentLayer=$scope.getCurrentLayer();currentLayer.__center=angular.copy($scope.center),currentLayer.__center.zoom=$scope.map.getZoom();var layer=$scope.currentLayer=$scope.getLayerByName(data.leafletEvent.name),crsName=layer.CRS||"EPSG900913";$scope.map.options.crs=L.CRS[crsName];var bounds;"imageOverlay"==layer.type?($(".leaflet-control-minimap, .leaflet-control-scale").hide(0),bounds=layer.bounds,$scope.coordsProjection="WGS84"):($(".leaflet-control-minimap, .leaflet-control-scale").show(0),bounds=[[layer.bounds.min.x,layer.bounds.min.y],[layer.bounds.max.x,layer.bounds.max.y]],$scope.coordsProjection="LV95");for(var id in $scope.map._layers)$scope.map._layers[id]._url==layer.url&&$scope.map._layers[id].bringToBack();$scope.map._zoom=layer.__center.zoom||0,$scope.map.setMaxBounds(bounds),$scope.map._resetView(L.latLng(layer.__center.lat,layer.__center.lng),$scope.map._zoom),void 0===layer.__center.zoom&&$timeout(function(){$scope.map.fitBounds(bounds)},100),$scope.$emit("baseLayerChanged")},overlayChange:function(e,data){$scope.$emit("overlayChanged",e,data)},zoomEvent:function(e){$scope.$emit("zoomEvent",e)},init:function(){var q=$q.defer();return $scope.saveButton.disable(),$scope.originButton.disable(),$scope.axisButton.disable(),$scope.beacons=beacons,$scope.$on("leafletDirectiveMap.lf-battelle.baselayerchange",$scope.baselayerChange),$scope.$on("leafletDirectiveMap.lf-battelle.overlayadd",$scope.overlayChange),$scope.$on("leafletDirectiveMap.lf-battelle.overlayremove",$scope.overlayChange),$scope.$on("leafletDirectiveMap.lf-battelle.zoomstart",$scope.zoomEvent),$scope.$on("leafletDirectiveMap.lf-battelle.zoomend",$scope.zoomEvent),$scope.loadLayers().then(function(){$scope.setupEventHandlers(),q.resolve()},function(err){q.reject(err)}),q.promise}}),$scope.init().then(function(){$scope.updateControls()})}]),angular.module("webmappApp").service("notify",function(){this.message=function(message){$.notify({message:'<span class="fa fa-exclamation-triangle">&nbsp;</span>'+message},{delay:5e3})}}),angular.module("webmappApp").service("beacons",["$http","$timeout","$q",function($http,$timeout,$q){function geojson_square_coordinates(layer,center,size){var localSystem=beacons.getLocalSystem(layer);localSystem.downVectorLength&&(size*=localSystem.scale),size/=2;var coordinates=[],proj=localSystem.proj;return angular.forEach([[center[0]-size,center[1]-size],[center[0]+size,center[1]-size],[center[0]+size,center[1]+size],[center[0]-size,center[1]+size],[center[0]-size,center[1]-size]],function(coords){proj?coordinates.push(proj4(proj,"WGS84",coords)):coordinates.push(coords)}),coordinates}var beacons=this;angular.extend(beacons,{http_origin:document.location.origin,getLocalSystem:function(layer){var baselayer=layer.scope.getCurrentLayer();return layer.localsystem&&(layer.localsystem[baselayer._name]||layer.localsystem["default"])},updateAxis:function(layer){for(var name in layer.localsystem){var localsystem=layer.localsystem[name];localsystem.axis={};var u=localsystem.axis.Y=[localsystem.downVector[0]-localsystem.origin[0],localsystem.downVector[1]-localsystem.origin[1]],distance=localsystem.downVectorLength||Math.sqrt(u[0]*u[0]+u[1]*u[1]);u[0]/=distance,u[1]/=distance,localsystem.scale=Math.sqrt(u[0]*u[0]+u[1]*u[1]);var v=localsystem.axis.X=[u[1],-u[0]];localsystem.invertYaxis&&(u[0]=-u[0],u[1]=-u[1]),localsystem.invertXaxis&&(v[0]=-v[0],v[1]=-v[1]),localsystem.switchAxis&&(localsystem.axis.X=u,localsystem.axis.Y=v)}},polygonSize:.5,getPolygonCoordinates:function(layer,center){return geojson_square_coordinates(layer,center,beacons.polygonSize)},onload:function(layer,res,callback){return res&&res.data&&res.data.error?callback(new Error(res.data.error),null):(beacons.updateAxis(layer),layer.getPolygonCoordinates=beacons.getPolygonCoordinates,layer.data=res.data,layer.rows=layer.data.rows,layer.geojson=beacons.toGeoJSON(layer),layer.scope.$on("updateSearchString",function(){layer.scope.updateGeoJSON(layer)}),layer.scope.$on("baseLayerChanged",function(){beacons.resetFeatureGroup(layer),layer.visible&&layer.scope.updateGeoJSON(layer)}),layer.scope.$on("overlayChanged",function(e,originalEvent,data){data.leafletEvent.name==layer.description&&(beacons.resetFeatureGroup(layer),"overlayadd"==originalEvent.name.split(".").pop()?(layer.visible=!0,layer.scope.updateGeoJSON(layer)):layer.visible=!1)}),layer.scope.$on("zoomEvent",function(e,originalEvent){layer.visible&&("zoomstart"==originalEvent.name.split(".").pop()?$(".leaflet-label").hide(0):(beacons.resetFeatureGroup(layer),layer.scope.updateGeoJSON(layer),$(".leaflet-label").show(0)))}),layer.refresh&&$timeout(function(){beacons.loop(layer)},Number(layer.refresh)+3e3),callback(null,{data:layer.geojson}),void 0)},resetFeatureGroup:function(layer){var fg_layer=layer.scope.getGeoJSONLayer(layer.name);if(fg_layer)layer.fg_layer=fg_layer,fg_layer.clearLayers();else{if(!layer.fg_layer)return;layer.fg_layer.clearLayers(),layer.fg_layer=null}for(var labelId in layer.scope.labels)labelId.split(".")[0]==layer.name&&delete layer.scope.labels[labelId]},iter:function(layer){var q=$q.defer();return null==layer.scope.getGeoJSONLayer(layer.name)?($timeout(function(){q.resolve(null)},Number(layer.refresh)),q.promise):($http.get(layer.url).then(function(res){return res.data.error?(console.log(layer.url,res.data.error),q.reject(new Error(res.data.error))):q.resolve(res)},function(err){console.log(layer.url,err),q.reject(new Error('Could not update layer "'+layer.description+'"'))}),q.promise)},loop:function loop(layer){beacons.iter(layer).then(function(res){res&&(layer.data=res.data,layer.scope.updateGeoJSON(layer)),$timeout(function(){loop(layer)},Number(layer.refresh))},function(err){layer.scope.notify.message(err.message),$timeout(function(){loop(layer)},Number(layer.refresh))})},toGeoJSON:function(layer){var localsystem=beacons.getLocalSystem(layer);if(!localsystem.axis)return{};var u=localsystem.axis.X,v=localsystem.axis.Y,origin=localsystem.origin,features=[];return angular.forEach(layer.rows,function(row){var x=Number(row.x),y=Number(row.y),coords=[origin[0]+x*u[0]+y*v[0],origin[1]+x*u[1]+y*v[1]];row.coords=coords;var latlng;if(localsystem.proj){var wgs84=proj4(localsystem.proj,"WGS84",coords);latlng={lat:wgs84[1],lng:wgs84[0]}}else latlng=[coords[1],coords[0]];features.push({type:"Feature",properties:{layerName:layer.name,description:row.shortname,latlng:latlng},geometry:{type:"Polygon",coordinates:[layer.getPolygonCoordinates(layer,coords)]}})}),{type:"FeatureCollection",features:features}}})}]),angular.module("webmappApp").directive("search",["$timeout",function($timeout){return{templateUrl:"views/search.html",restrict:"E",scope:{delay:"@",onsearch:"&"},link:function(scope,element,attrs){element.on("keyup","input",function(e){return $timeout.cancel(scope._keyupTimeout),27==e.keyCode?($(e.target).val(""),void $timeout(function(){scope.onsearch({val:""})})):void(scope._keyupTimeout=$timeout(function(){"function"==typeof scope.onsearch&&scope.onsearch({val:$(e.target).val()})},scope.timeout))})}}}]),angular.module("webmappApp").run(["$templateCache",function($templateCache){$templateCache.put("views/about.html","<p>This is the about view.</p>"),$templateCache.put("views/battelle.html",'<div id="battelle" ng-cloak> <search onsearch="updateSearchString({val:val})" delay="0"> <div id="crosshair-h" class="hair"></div> <div id="crosshair-v" class="hair"></div> <leaflet ng-if="layers.overlays" bounds="bounds" geojson="geojson" defaults="defaults" id="lf-battelle" lf-center="center" layers="layers" controls lf-draw="drawOptions" event-broadcast="events" url-hash-center="yes" width="100%" height="100%"></leaflet> <div class="wrapper"> <div id="mousecoords" ng-cloak>{{getCoordsToDisplay()}}</div> </div> </div>'),$templateCache.put("views/main.html",""),$templateCache.put("views/search.html",'<div class="custom-search-input"> <div class="input-group"> <input type="text" class="search-query form-control" placeholder="Search"> <span class="input-group-btn"> <button class="btn" type="button"> <span class="glyphicon glyphicon-search"></span> </button> </span> </div> </div>')}]);